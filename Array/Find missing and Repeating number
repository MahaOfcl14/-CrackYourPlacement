vector<int> findMissingRepeatingNumbers(vector < int > a) {
    // Write your code here
    /*
    First lets sum up the given array and sum up to n natural numbers and take it as Sn -- n(n+1)/2
    Next square the array and sum of n natural numbers S2n- n*n+1*2n+1/6
    then sum up the values of array and store ir as s1, similar to s2
    then we have to find 2 values val1 and val2 - val 1 = s-sn. val2 = s2,s2n, val2= val2/val; 
    */
     long long n = a.size();
     long long SN = (n*(n+1))/2;
     long long S2N = (n*(n+1)*(2*n+1))/6;
     long long S = 0;
     long long S2 = 0;
     for(int i=0; i<n; i++){
         S += a[i];
         S2 += (long long)a[i] * (long long)a[i];
     }
    long long val1 = S - SN;
    long long val2 = S2 - S2N;
    val2 = val2/val1;
    long long x = (val1+val2)/2;
    long long y = x-val1;
    return{(int)x, (int)y};
}
